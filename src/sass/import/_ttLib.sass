$default_width: 1280


@function strip-units($value)
  @return $value / ($value * 0 + 1)

@function getWidthRatio($width, $base_width)
  @return percentage(getWidthRatioNoUnit($width, $base_width))

@function getWidthRatioNoUnit($width, $base_width)
  @return strip-units($width) / strip-units($base_width)

@mixin setAuto($prop, $value)
  @if $left == auto
    $prop: $value / $default_width
  @else
    $prop: $value

@mixin liquidAbs($left: 0, $top: 0, $right: auto, $bottom: auto)
  position: absolute

  +setAuto(left, $left)
  +setAuto(top, $top)
  +setAuto(right, $right)
  +setAuto(bottom, $bottom)

@mixin liquidWidth($width)
  width: getWidthRatio($width, $default_width)

@mixin w100()
  width: 100%

@mixin liquidY($prop, $width, $y)
  $prop: getY($width, $y)

@function getY($width, $y)
  @return getWidthRatioNoUnit($width, $default_width) * $y

@mixin fitSectionImgWidth($h1Img, $h2Img, $bodyImg)
  +fitSectionImg( image-width($h1Img), image-width($h2Img), image-width($bodyImg) )

@mixin fitSectionImg($h1ImgWidth, $h2ImgWidth, $bodyImgWidth)
  h1 img
    +liquidWidth($h1ImgWidth)
  h2 img
    +liquidWidth($h2ImgWidth)
  div.body img
    +liquidWidth($bodyImgWidth)
    //image-rendering: -moz-crisp-edges

@mixin regTranslateXY($animName, $fromX, $fromY, $toX, $toY)
  +keyframes($animName)
    0%
      +transform(translateX($fromX) translateY($fromY) translateZ(0))
    100%
      +transform(translateX($toX) translateY($toY) translateZ(0))

@mixin regRotate($animName, $rotation: 0deg)
  +keyframes($animName)
    0%
      +transform(rotate(0))
    100%
      +transform(rotate($rotation))

@mixin regUnyo($animName, $scalex: 1.0, $scaley: 1.0, $rotation: 0deg, $tx: 0px, $ty: 0px)
  +keyframes($animName)
    0%
      +transform(scaleX(1.0) scaleY(1.0) rotate(0deg) translateX(0px) translateY(0px))
    60%
      +transform(scaleX($scalex) scaleY($scaley) rotate($rotation) translateX($tx) translateY($ty))
    100%
      +transform(scaleX(1.0) scaleY(1.0) rotate(0deg) translateX(0px) translateY(0px))

@mixin regBGColor($animName, $originalColor: #000, $changeColor: #000, $timing: 60%)
  +keyframes($animName)
    0%
      background-color: $originalColor
    #{$timing}
      background-color: $changeColor
    100%
      background-color: $originalColor

@mixin regOpacity($animName, $opacity: 1.0, $timing: 60%)
  +keyframes($animName)
    0%
      +opacity(1.0)
    #{$timing}
      +opacity($opacity)
    100%
      +opacity(1.0)

@mixin unyo($animName, $time: 1s, $delay: 0.0s)
  +animation($animName $time infinite)
  animation-delay: $delay
  -moz-animation-delay: $delay
  //-o-animation-delay: $delay
  //-ms-animation-delay: $delay
  -webkit-animation-delay: $delay

@mixin createUgoUgoAnim($animName, $y, $x: 0)
  +keyframes($animName)
    from
      background-position: $x 0
    to
      background-position: $x $y

@mixin delayAnim($delay)
  animation-delay: $delay
  -moz-animation-delay: $delay
  -o-animation-delay: $delay
  -ms-animation-delay: $delay
  -webkit-animation-delay: $delay

@mixin alternateAnim()
  animation-direction: alternate
  -moz-animation-direction: alternate
  -o-animation-direction: alternate
  -ms-animation-direction: alternate
  -webkit-animation-direction: alternate

@mixin creaeFadeIn($animName, $value: 1)
  +keyframes($animName)
    from
      opacity: 0
    to
      opacity: $value

@mixin doAnim($animName, $ease: ease, $time: 1s, $alternate: false, $repeat: 1)
  +animation($animName $time $ease $repeat)
  @if ($alternate == true)
    +alternateAnim()

@mixin doUgougoAnim($animName, $time: 1s, $step: 2,  $alternate: false)
  +animation($animName $time steps($step) infinite)
  @if ($alternate == true)
    +alternateAnim()

@mixin bgBox($bg)
  //text-indent: -9999px
  background: image-url($bg) no-repeat 0 0
  width: image-width($bg)
  height: image-height($bg)

@mixin ugougoBox($bg, $repeatNum)
  text-indent: -9999px
  +bgBox($bg)
  $height: round(image-height($bg) / $repeatNum)
  height: $height



/**
 * Image
 */
@mixin imgCenter($img, $width: 1280)
  position: absolute
  left: ($width / 2) - (image-width($img) / 2)

@mixin originImgCenter($img)
  +transform-origin(image-width($img) / 2, image-height($img) / 2)

@mixin ghostOverlay($img, $width: 1280px)
  body.debug
    .debug-overlay
      background: image-url($img) 0 0 no-repeat
      width: $width
      height: image-height($img)
      border-left: 1px dotted #000
      border-right: 1px dotted #000
      opacity: 0.4
      +abs(50%, 0)
      margin-left: round($width * -0.5) - 1px
      z-index: 65555
      @for $i from 1 through 9
        &.debug-overlay-alpha#{$i}
          $alpha: $i / 10
          opacity: #{$alpha}
      &.hide
        display: none
